{****************************
** Switcharoo v1.0.3 - by Hushaboom **
**Fast Zone switching tool for Kontakt**
**Offers sample switching on the fly while maintaining full Velo Range.**
**Developed By:  Sultry Sound**
**Producer:	Steve Sechler**
**Programmed by:	Robert Kerr**


Copyright [2023] [Sultry Sound]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

****************************
}

on init

  {Booleans}
  declare $guiBool := 0
  declare $onInit := 0
  
  {Real numbers/Float Variables}
  declare ~threshold
  
  {Free floating Variables}
  declare $endZone
  declare $outcast
  
  
  {Counters}
  declare $ticker := 0	{Counts release}
  declare $talker := 0	{Counts Note}
  declare $groupCount := 0
  declare $onGroup := 0
  
  {Scaled Variables}
  declare $primaryGroup := 0
  declare $secondaryGroup := 1
  declare $tertiaryGroup := 2
  
  {Count available groups - Should probably store these in a list}
  while ($groupCount < $NUM_GROUPS)
    $groupCount := $groupCount + 1
    end while

  set_listener($NI_SIGNAL_TIMER_MS,500)	{Tell Kontakt to check 'on listener' every 50ms}

end on

on note

$talker := $talker + 1

disallow_group($ALL_GROUPS) {Silence all layers}

if ($onInit = 0)  {If this is on startup, select the primary layer}
    
    $onGroup := $secondaryGroup
    $onInit := 1    {Tell Kontakt it's running}
	allow_group($onGroup)
	$endZone := get_event_par($EVENT_ID,$EVENT_PAR_ZONE_ID)
    
else  

    {Check to see if any conditions were met - All conditions go here}
	
	disallow_group($onGroup) {Silence the layer}
	
    if ($outcast = $onGroup)	{A Condition has been met, lets see which one}
	
        if ($talker > 2)	{If our threshold (whilch will be developed into adjustable time delay) is the reason for our outcast}
		
			$endZone := $endZone + 1	{trigger the script in on listener}
			
        else	{If the condition wasn't threshold, its something else.  For now we will just test the boolean}
						
						if($guiBool = 1)
							$onGroup := $secondaryGroup
							~threshold := 0.0
							$outcast := 9999
							$guiBool := 0

							end if

			allow_group($onGroup)
			
        end if
		
      end if
	  
end if
    
if($outcast = $onGroup)

	allow_group($onGroup)	{Don't forget to re-activate the layer}

else

	allow_group($onGroup)
	$endZone := get_event_par($EVENT_ID,$EVENT_PAR_ZONE_ID)
	
end if

end on

on release

$ticker := $ticker + 1	{count how many times any key has been released}

if ($ticker > 20)

    $outcast := $onGroup	{Discriminate against the current group for the sake of having a condition}
	$onGroup := $primaryGroup	{Pick a better group than those dirty outcasts}
    $ticker := 0
	
end if

if ($talker > 2)

	$outcast := $onGroup
	
end if

end on

on listener

if (($talker > 2) and ($outcast = $secondaryGroup))

	$onGroup := $tertiaryGroup	{select layer 3}
	$outcast := $onGroup	{Should bring us back to the primary}
	$endZone := $endZone + 1 {Make sure Kontakt thinks we're on a different zone}
	$talker := 0
	
else
	
	$onGroup := $primaryGroup
	$endZone := 0	{Kicks us out of the conditionals, then we reset the whole cycle}
	$groupCount := 0
	$outcast := 9999
	$talker := 0
	
end if

end on


on controller
end on